{"version":3,"sources":["Popup.js","CodeBlock.js","HomePopup.js","../README.md","TryPopup.js","FormatPopup.js","Viewer.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","Popup","props","open","setOpen","title","innerContent","icon","closeText","onClose","transition","handleClose","descriptionElementRef","React","useRef","useEffect","descriptionElement","current","focus","DialogTitle","withStyles","children","classes","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","Dialog","scroll","aria-labelledby","aria-describedby","TransitionComponent","id","ListItem","ListItemIcon","ListItemText","primary","DialogContent","dividers","DialogActions","Button","CodeBlock","this","language","value","style","docco","PureComponent","defaultProps","Transition","forwardRef","ref","Slide","direction","HomePopup","content","DialogContentText","source","replace","renderers","code","useStyles","makeStyles","display","alignItems","width","input","marginLeft","flex","iconButton","divider","height","baseStyle","flexDirection","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","activeStyle","acceptStyle","rejectStyle","setFile","useState","url","setUrl","useDropzone","onDrop","files","length","loadFile","getRootProps","acceptedFiles","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","file","Paper","component","InputBase","placeholder","onChange","event","target","Divider","orientation","endIcon","type","flexWrap","justifyContent","overflow","background","paper","gridList","header","marginBottom","tile","cursor","opacity","FormatPopup","format","description","Link","href","fontSize","GridList","cellHeight","models","map","model","GridListTile","key","startsWith","window","location","onModelClick","src","thumbnail","GridListTileBar","name","subtitle","size","actionIcon","extension","unityContent","UnityContent","adjustOnWindowResize","textAlign","text","secondary","Viewer","ready","setReady","setFileName","on","onReady","onLoaded","onError","reader","FileReader","onload","e","filedata","result","send","readAsArrayBuffer","JSON","stringify","console","log","grow","flexGrow","appBar","zIndex","drawer","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","sectionDesktop","sectionMobile","backdrop","App","useTheme","enqueueSnackbar","useSnackbar","showSnackbar","message","localStorage","getItem","homePopupOpened","sethomePopupOpened","tryPopupOpened","setTryPopupOpened","formatPopupOpened","setFormatPopupOpened","openedFormat","setOpenedFormat","shouldOpenDrawer","innerWidth","innerHeight","autoOpenDrawer","addEventListener","onClickInfo","showProgress","setShowProgress","setItem","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","button","startIcon","aria-haspopup","Drawer","List","catalog","formats","index","openFormatPopup","elevation","Backdrop","CircularProgress","Boolean","hostname","match","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9e2ec39b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nexport default function Popup(props) {\r\n    const { open, setOpen, title, innerContent, icon, closeText, onClose, transition } = props;\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        if(onClose)  onClose();\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    const DialogTitle = withStyles(styles)((props) => {\r\n        const { children, classes, onClose, ...other } = props;\r\n        return (\r\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n                <Typography variant=\"h6\">{children}</Typography>\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </MuiDialogTitle>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll=\"paper\"\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                TransitionComponent={transition}\r\n            >\r\n                <DialogTitle\r\n                    id=\"scroll-dialog-title\"\r\n                    onClose={handleClose}\r\n                >\r\n                    <ListItem >\r\n                        <ListItemIcon>\r\n                            {icon}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={title} />\r\n                    </ListItem>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    {innerContent}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        {closeText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null\r\n  };\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <SyntaxHighlighter language={language} style={docco}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;","import React from 'react';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Popup from './Popup'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CodeBlock from \"./CodeBlock\";\r\n\r\n// import md with raw-loader webpack plugin, see react-app-rewired and config-overrides.js\r\n/* eslint import/no-webpack-loader-syntax: off */\r\nimport readme from '!raw-loader!../README.md'\r\n\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function HomePopup(props) {\r\n\r\n    // remove the line to the demo\r\n    const getText = () => {\r\n       return readme.replace(/^Demo(.*)$/mg,\"\")\r\n    }\r\n\r\n    const content = (\r\n    <DialogContentText>\r\n         <ReactMarkdown \r\n         source={getText()} \r\n         renderers={{ code: CodeBlock }}\r\n         />\r\n    </DialogContentText>);\r\n\r\n    return (\r\n        <Popup\r\n            title=\"About this 3D viewer\"\r\n            innerContent={content}\r\n            icon={<InfoIcon />}\r\n            closeText=\"Try it\"\r\n            transition = {Transition}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","export default \"# 3D file viewer made for the web\\n\\nThis 3D viewer is purely made of javascript that runs locally on your browser. It allows you to load 45+ 3D model formats.\\n\\nDemo : https://rufus31415.github.io/sandbox/3d-viewer\\n\\nIt is based on WebGL and WebAssembly technologies as well as the Unity 3D rendering engine and the Assimp library. It also relies on a lot of code I wrote myself.\\n\\nThis demo is entirely developed in React and bootstrapped with \\\"Create React App\\\". It allows you to load your own models as well as my demo models.\\n\\nIt has been tested with :\\n- Firefox on Windows\\n- Chrome on Windows\\n- Edge on Windows\\n- Safari on iOS (you should disable WebGL2.0 in experimental features)\\n\\nIf WebGL2.0 is not supported by your browser, the rendering is switched to WebGL1.0.\\n\\nUnfortunately, I can't publish the code that decodes 3D formats because I had to buy several proprietary libraries I and can only distribute compiled binaries.\\n\\nYou can browse the list of supported formats on the right. The long text is often taken from Wikipedia. The 3D models come from the free models of Assimp or from models made by myself.\\n\\nYou can also load your own 3D models by browsing your disk or by pointing to a url. If one of your models doesn't load, could you email it to me at [rufus31415@gmail.com](mailto:rufus31415@gmail.com) for debug purposes ?\\n\\n# Supported formats\\nHere are the supported formats :\\n- OnShape\\n- 3DS\\n- 3MF\\n- AC\\n- AMF\\n- ASE\\n- B3D\\n- BLENDER\\n- BVH\\n- C4D\\n- COB\\n- Collada\\n- CSM\\n- DXF\\n- FBX\\n- glb\\n- glTF\\n- HMP\\n- IFC\\n- IRR\\n- JT\\n- LWO\\n- LWS\\n- LXO\\n- M3D\\n- MD2\\n- MD3\\n- MD4\\n- MD5\\n- MDL\\n- MS3D\\n- NFF\\n- OBJ\\n- OFF\\n- OpenGEX\\n- PLY\\n- Q3D\\n- RAW\\n- SIB\\n- SMD\\n- STEP\\n- STL\\n- TER\\n- X\\n- X3D\\n- XGL\\n\\n# What's next ?\\n\\nHere are the features I would like to add:\\n- Animation support\\n- Extending the support of the STEP format\\n- Add format detection if no extension is specified\\n- Add export to certain formats to use it as a conversion tool\\n- Add the possibility to view the model in augmented reality on compatible platforms\\n- Make it possible to manipulate the camera and add several models, via javascript\\n- Obtain via javascript the tree structure of the model\\n- Improve the handling of external resources (texture files, image...)\\n- Add other formats (like Solidworks, Creo, Catia, ...)\\n\\nI don't know yet if I will continue to develop this viewer to make it a separate product. It will depend on the craze around.\\n\\nIf that's the case, I could make it a separate React component that could be installed via NPM.\\n\\n``` shell\\nnpm install my-super-3d-viewer-react \\n```\\n\\nAnd the javascript code would looks like :\\n\\n``` js\\nimport Viewer from 'my-super-3d-viewer-react'\\n\\nexport default function App() {\\n\\n    // path to my 3D file or binaries of my file\\n    const file = \\\"https://ballcuber.github.io/assets/models/ballcuber.glb\\\"\\n\\n    const onViewerReady = () => {\\n        // Viewer is ready to use\\n    }\\n\\n    const onViewerLoaded = () => {\\n        // The file has loaded successfully\\n    }\\n\\n    const onViewerError = () => {\\n        // An error has occurred\\n    }\\n\\n    return (\\n          <Viewer\\n            file={file}\\n            onReady = {onViewerReady}\\n            onLoaded = {onViewerLoaded}\\n            onError = {onViewerError}\\n          />\\n    );\\n}\\n```\\n\\nWhy not also isolate the loader to make it an extension to other 3D engines like Three.js.\\n\\nWhy not buy a Unity pro account to remove the watermak when loading.\\n\\nI would also like to reduce the size of the build, it is currently ~8Mb.\\n\\nI hope you'll like it, don't hesitate to ask me for improvements or ideas!\";","import React, { useMemo, useState } from 'react';\r\nimport Popup from './Popup'\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\",\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\n\r\nexport default function HomePopup(props) {\r\n    const classes = useStyles();\r\n    const { setFile } = props\r\n\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    const onDrop = (files) => {\r\n        if(files.length >0) loadFile(files[0]);\r\n    }\r\n\r\n    const { acceptedFiles,\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject,\r\n        open\r\n    } = useDropzone({ onDrop });\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const loadFile = (file) => {\r\n        props.setOpen(false)\r\n        setFile(file)\r\n    }\r\n\r\n    \r\n    const content = (\r\n        <DialogContent>\r\n            <section>\r\n                You can load your own file to test this viewer.\r\n                If your file is not loading properly, could you please send it to me at <u>rufus31415@gmail.com</u> ?\r\n                <h2>From URL</h2>\r\n                Please enter a URL to your 3D file or to a public OnShape document.\r\n                <div className={{ alignItems: 'center' }}>\r\n                    <Paper component=\"form\" className={classes.root}>\r\n                        <InputBase\r\n                            className={classes.input}\r\n                            placeholder=\"https://\"\r\n                            onChange={(event) => setUrl(event.target.value)}\r\n                            value={url}\r\n                        />\r\n                        <Divider className={classes.divider} orientation=\"vertical\" />\r\n                        <Button\r\n                            className={classes.iconButton}\r\n                            endIcon={<GetAppIcon />}\r\n                            onClick={() => loadFile(url)}\r\n                        >\r\n                            Load\r\n                        </Button>\r\n                    </Paper>\r\n\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <h2>From disk</h2>\r\n                <div {...getRootProps({ style })}>\r\n                    <input {...getInputProps()} />\r\n                    <p>Drag 'n' drop a 3D file here</p>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        onClick={open}>\r\n                        Browse...\r\n                    </Button>\r\n                </div>\r\n            </section>\r\n        </DialogContent>\r\n    );\r\n\r\n    return (\r\n        <Popup\r\n            title=\"Try open my files\"\r\n            innerContent={content}\r\n            icon={<OpenInBrowserIcon />}\r\n            closeText=\"Close\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Popup from './Popup'\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport Link from '@material-ui/core/Link';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  gridList: {\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.5)',\r\n  },\r\n  header: {\r\n    marginBottom: 20,\r\n  },\r\n  tile: {\r\n    cursor: \"pointer\",\r\n    opacity: 0.7,\r\n    '&:hover': {\r\n      opacity: 1\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport default function FormatPopup(props) {\r\n  const classes = useStyles();\r\n\r\n  const onModelClick = (model) => {\r\n    props.setOpen(false);\r\n    if(model.file.startsWith(\"http\")) props.setFile(model.file);\r\n    else props.setFile(window.location  + model.file);\r\n  }\r\n\r\n  const content = props.format ? (\r\n    <div>\r\n      <div className={classes.header}>\r\n        {props.format.description}\r\n        <span>  <Link href={props.format.url} target=\"_blank\">Read more...<OpenInNewIcon fontSize=\"inherit\" /></Link></span>\r\n      </div>\r\n      <div className={classes.root}>\r\n\r\n        <GridList cellHeight={180} className={classes.gridList}>\r\n          {props.format.models.map((model) => (\r\n            <GridListTile\r\n              key={model.file}\r\n              onClick={() => onModelClick(model)}\r\n              className={classes.tile}\r\n            >\r\n              <img src={model.thumbnail} />\r\n              <GridListTileBar\r\n                title={model.name}\r\n                subtitle={<span>{model.size}</span>}\r\n                actionIcon={\r\n                  <Link href={model.file} target=\"_blank\">\r\n                    <IconButton\r\n                      className={classes.icon}>\r\n                      <OpenInNewIcon />\r\n                    </IconButton>\r\n                  </Link>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    </div>\r\n  ) : null\r\n\r\n  return (\r\n    <Popup\r\n      innerContent={content}\r\n      icon={<img src={\"formats/\" + props.format?.id + \"/icon.png\"} />}\r\n      closeText=\"Close\"\r\n      title={props.format?.name + \" (*.\" + props.format?.extension + \")\"}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Unity, { UnityContent } from \"react-unity-webgl\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst unityContent = new UnityContent(\r\n    \"Build/build.json\",\r\n    \"Build/UnityLoader.js\",\r\n    {\r\n        adjustOnWindowResize: true\r\n    }\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    unityContent: {\r\n        background: \"white\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function Viewer(props) {\r\n    const classes = useStyles();\r\n    const [ready, setReady] = useState(false);\r\n    const [fileName, setFileName] = useState(null);\r\n\r\n    unityContent.on(\"Ready\", () => {\r\n        setReady(true)\r\n        loadFile();\r\n\r\n        if (typeof props.onReady == \"function\") props.onReady();\r\n    }\r\n    );\r\n\r\n    unityContent.on(\"OnLoaded\", () => {\r\n        try {\r\n            if (typeof props.onLoaded == \"function\") props.onLoaded();\r\n        }\r\n        catch{ }\r\n    }\r\n    );\r\n\r\n    unityContent.on(\"OnError\", () => {\r\n        try {\r\n            if (typeof props.onError == \"function\") props.onError();\r\n        }\r\n        catch{ }\r\n    }\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (ready) loadFile()\r\n    }, [props.file]);\r\n\r\n    const loadFile = () => {\r\n        try {\r\n            if (props.file && typeof props.file == \"object\") {\r\n                var reader = new FileReader();\r\n                reader.onload = (function (file) {\r\n                    return function (e) {\r\n                        (window.filedata = window.filedata ? window.filedata : {})[file.name] = e.target.result;\r\n                        unityContent.send(\"root\", \"FileUpload\", file.name)\r\n                        setFileName(file.name);\r\n                    }\r\n                })(props.file);\r\n                reader.readAsArrayBuffer(props.file);\r\n            }\r\n            else if (typeof props.file == \"string\") {\r\n                unityContent.send(\"root\", \"Load\", JSON.stringify({ file: props.file }))\r\n                setFileName(props.file);\r\n            }\r\n            else {\r\n                unityContent.send(\"root\", \"Clear\");\r\n                setFileName(\"\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            if (typeof props.onError == \"function\") props.onError();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <Unity unityContent={unityContent} height=\"100%\" width=\"100%\" className={classes.unityContent} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HomePopup from './HomePopup'\nimport TryPopup from './TryPopup'\nimport FormatPopup from './FormatPopup'\nimport Viewer from './Viewer';\nimport catalog from './catalog.json'\nimport { useSnackbar } from 'notistack';\n\nconst drawerWidth = 310;\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 2,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    height: \"60px\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    height: \"100vh\",\n    width: \"100%\"\n  },\n  innerContent: {\n    display: 'flex',\n    height: \"calc(100vh - 80px)\",\n    width: \"100%\"\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  /** Snack bars */\n  const { enqueueSnackbar } = useSnackbar();\n\n  const showSnackbar = (variant, message) => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar(message, { variant });\n  };\n\n\n  /** Home popup */\n  const shouldOpenHomePopup = () => {\n    if (typeof localStorage != 'undefined') {\n      return localStorage.getItem('homePopup') == null;\n    }\n    else return true;\n  }\n\n  const onCloseHomePopup = () => {\n    if (typeof localStorage != 'undefined') {\n      localStorage.setItem('homePopup', true);\n    }\n  }\n\n  const [homePopupOpened, sethomePopupOpened] = React.useState(shouldOpenHomePopup());\n\n  /** Try popup */\n  const [tryPopupOpened, setTryPopupOpened] = React.useState(false);\n\n  const openTryPopup = () => {\n    autoOpenDrawer();\n    setTryPopupOpened(true);\n  }\n\n  /** Format popup */\n  const [formatPopupOpened, setFormatPopupOpened] = React.useState(false);\n  const [openedFormat, setOpenedFormat] = React.useState(null);\n\n  /** Viewer */\n  const [file, setFile] = React.useState(window.location + \"formats/FBX/models/box.fbx\");\n\n  const onViewerReady = () => {\n    setShowProgress(false)\n  }\n\n  const onViewerLoaded = () => {\n    showSnackbar(\"success\", \"Model loaded with success\")\n    setShowProgress(false)\n  }\n\n  const onViewerError = () => {\n    showSnackbar(\"error\", \"An error has occurred. If you are trying to load a model, could you please email it to me at rufus31415@gmail.com ?\")\n    setShowProgress(false)\n  }\n\n  /** left drawer */\n  const shouldOpenDrawer = () => window.innerWidth / window.innerHeight > 1;\n  const [open, setOpen] = React.useState(shouldOpenDrawer());\n  const autoOpenDrawer = () => { if (open) setOpen(shouldOpenDrawer()) };\n\n  const handleDrawerOpen = () => setOpen(true);\n\n  const handleDrawerClose = () => setOpen(false);\n\n  window.addEventListener(\"resize\", autoOpenDrawer, false);\n  window.addEventListener(\"orientationchange\", autoOpenDrawer, false);\n\n  /** Menu right */\n\n  const openFormatPopup = (format) => {\n    autoOpenDrawer();\n    setOpenedFormat(format);\n    setFormatPopupOpened(true);\n  }\n\n  const onClickInfo = () => sethomePopupOpened(true);\n\n  /** Progress */\n  const [showProgress, setShowProgress] = React.useState(true);\n\n\n  return (\n    <div className={classes.root}>\n      <HomePopup\n        open={homePopupOpened}\n        setOpen={sethomePopupOpened}\n        onClose={onCloseHomePopup}\n      />\n      <TryPopup\n        open={tryPopupOpened}\n        setOpen={setTryPopupOpened}\n        setFile={setFile}\n      />\n      <FormatPopup\n        open={formatPopupOpened}\n        setOpen={setFormatPopupOpened}\n        format={openedFormat}\n        setFile={setFile}\n      />\n\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            3D file Viewer\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Link href=\"https://github.com/rufus31415\" color=\"inherit\" target=\"_blank\">\n              <Button\n                color=\"inherit\"\n                className={classes.button}\n                startIcon={<GitHubIcon />}\n              >\n                GitHub\n            </Button>\n            </Link>\n            <Button\n              color=\"inherit\"\n              className={classes.button}\n              startIcon={<InfoIcon />}\n              onClick={onClickInfo}\n            >\n              Info\n            </Button>\n          </div>\n          <div className={classes.sectionMobile}>\n            <Link href=\"https://github.com/rufus31415\" color=\"inherit\" target=\"_blank\">\n              <IconButton\n                aria-label=\"GitHub\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <GitHubIcon />\n              </IconButton>\n            </Link>\n            <IconButton\n              aria-label=\"Info\"\n              aria-haspopup=\"true\"\n              onClick={null}\n              color=\"inherit\"\n              onClick={onClickInfo}\n            >\n              <InfoIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button\n            key=\"browser\"\n            onClick={openTryPopup}\n          >\n            <ListItemIcon><OpenInBrowserIcon /></ListItemIcon>\n            <ListItemText primary=\"Try my files\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          {catalog.formats.map((format, index) => (\n            <ListItem button\n              key={format.id}\n              onClick={() => openFormatPopup(format)}\n            >\n              <ListItemIcon><img src={\"formats/\" + format.id + \"/icon.png\"} /></ListItemIcon>\n              <ListItemText primary={format.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n\n        <Paper elevation={3} className={classes.innerContent}>\n          <Backdrop className={classes.backdrop} open={showProgress} >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n          <Viewer\n            file={file}\n            onReady={onViewerReady}\n            onLoaded={onViewerLoaded}\n            onError={onViewerError}\n          />\n        </Paper>\n\n      </main>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n    >\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}